apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  creationTimestamp: '2020-07-13T21:08:07Z'
  generation: 2
  name: cs-rest-backend-deployment
  namespace: tekton-pipelines
  resourceVersion: '33308923'
  selfLink: >-
    /apis/tekton.dev/v1alpha1/namespaces/tekton-pipelines/tasks/cs-rest-backend-deployment
  uid: 0b8017e3-5c30-4bd3-abce-e0a6d293e5c3
spec:
  inputs:
    resources:
      - name: image-node
        type: image
      - name: source
        type: git
  steps:
    - image: 'quay.io/openshift/origin-cli:latest'
      name: oc
      resources: {}
      script: |
        TAG="v3" 
        oc delete deploy cs-node-rest-backend -n tekton-pipelines
        cat << EOF | kubectl apply -n tekton-pipelines -f - 
        kind: Deployment
        apiVersion: apps/v1
        metadata:
          name: cs-node-rest-backend
          namespace: tekton-pipelines
          labels:
            app: cs-rest-backend
            version: v1
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: cs-rest-backend
              version: v1
          template:
            metadata:
              labels:
                app: cs-rest-backend
                version: v1
            spec:
              containers:
                - name: cs-rest-app
                  image: >-
                    image-registry.openshift-image-registry.svc:5000/tekton-pipelines/cs-rest-backend:v1
                  ports:
                    - containerPort: 9000
                      protocol: TCP
                  resources: {}
                  imagePullPolicy: Always
              restartPolicy: Always
        EOF
      workingDir: /workspace/source/